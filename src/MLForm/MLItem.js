import React from 'react'
import { Form } from 'antd'
import PropTypes from 'prop-types'
import classNames from 'classnames'
import MLTableContext from '../MLConfigProvider/MLTableContext'
const { Item } = Form

const MLItem = React.forwardRef((props, ref) => {
  return (
    <MLTableContext.Consumer>
      {(isInsideTable) => (
        <Item
          ref={ref}
          hasFeedback={isInsideTable}
          {...props}
          className={classNames('ml-form-item', props.className)}
        >
          {props.children}
        </Item>
      )}
    </MLTableContext.Consumer>
  )
})

MLItem.defaultProps = {
  colon: true,
}

MLItem.propTypes = {
  /** Used with label, whether to display : after label text. */
  colon: PropTypes.bool,
  /** The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time. */
  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  /** Used with validateStatus, this option specifies the validation status icon. Recommended to be used only with Input.
   *  Guideline: Use hasFeedback=true in table cells, false otherwise */
  hasFeedback: PropTypes.bool,
  /** The prompt message. If not provided, the prompt message will be generated by the validation rule. */
  help: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  /** Set sub label htmlFor. */
  htmlFor: PropTypes.string,
  /** Label text */
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
  /** The layout of label. You can set span offset to something like {span: 3, offset: 12} or sm: {span: 3, offset: 12} same as with <Col>. You can set on Form one time after 3.14.0. Will take FormItem's prop when both set with Form. */
  labelCol: PropTypes.object,
  /** text align of label */
  labelAlign: PropTypes.oneOf(['left', 'right']),
  /** Whether provided or not, it will be generated by the validation rule. */
  required: PropTypes.bool,
  /** The validation status. If not provided, it will be generated by validation rule. options: 'success' 'warning' 'error' 'validating' */
  validateStatus: PropTypes.string,
  /** The layout for input controls, same as labelCol. You can set on Form one time after 3.14.0. Will take FormItem's prop when both set with Form. */
  wrapperCol: PropTypes.object,
}

MLItem.displayName = 'MLForm.MLItem'

export default MLItem
