@import '../../styles.less';

.ml-header-table table {
  border-collapse: collapse; /* Hack to get borders between header-rows to show up */
}

.ml-table {
  td:not(.ant-table-row-expand-icon-cell) {
    vertical-align: top;
  }

  td.ant-table-row-expand-icon-cell {
    background-color: @table-toggle-column-bg;
  }

  .ml-table .ant-table {
    margin-left: -16px;
  }

  .ant-table-row > td {
    .ml-header-table, .ml-table .ant-table {
      margin: -16px;
    }
  }

  .ant-table-middle {
    .ant-table-row > td {
      .ml-header-table, .ml-table .ant-table {
        margin: -12px -8px;
      }
    }
  }

  .ant-table-small {
    .ant-table-row > td {
      .ml-header-table, .ml-table .ant-table {
        margin: -8px;
      }
    }
  }

  // If the row-nested table has anything around it, don't set its margin-top
  .ant-table-expanded-row > td > .ml-table:not(first-child), .ant-table-expanded-row > td > * .ml-table {
    .ant-table {
      margin-top: 0;
      margin-bottom: 0;
    }
  }

  .ml-header-table .ant-descriptions-item-label + td {
    display: none;
  }

  .ant-table-tbody > tr.ml-table-row-drag-stale {
    &:hover > td {
      // Cancel out hover color on wrong row after drag
      background: inherit;
    }
  }

  .ml-table-row-drop-target {
    position: relative;
    transform: scale(1); // Hack to allow <tr>s to correctly size `position: absolute` children
  }
  .ml-table-row-drop-target::after {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: #ccc;
  }
}
